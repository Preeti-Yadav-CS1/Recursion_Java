public class Main
{
    public static void towerOfHanoi(int n, String src, String helper, String dest){
        if(n==1){
            System.out.println("transfer of disc"+n+" from"+src+ " to "+dest);
            return;
        }
        towerOfHanoi(n-1, src, dest, helper);
        System.out.println("transfer of disc"+n+" from"+src+ " to "+dest);
        towerOfHanoi(n-1, helper, src, dest);
    }
	public static void main(String[] args) {
		int n=3;
		towerOfHanoi(n, "S","H","D");
	}
}

(7 steps for n=3; 4 steps for n=2; one step for n=1)
Output: 
transfer of disc1 fromS to D
transfer of disc2 fromS to H
transfer of disc1 fromD to H
transfer of disc3 fromS to D
transfer of disc1 fromH to S
transfer of disc2 fromH to D
transfer of disc1 fromS to D


Time Complexity:
O(2^n)
